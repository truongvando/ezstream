#!/bin/bash

# Script ki·ªÉm tra nginx config tr√™n VPS
# Ch·∫°y tr√™n VPS: ./check-nginx-config.sh <STREAM_ID>

STREAM_ID="$1"

if [ -z "$STREAM_ID" ]; then
    echo "‚ùå C·∫ßn cung c·∫•p Stream ID"
    echo "S·ª≠ d·ª•ng: $0 <STREAM_ID>"
    echo "V√≠ d·ª•: $0 94"
    exit 1
fi

echo "üîç Checking Nginx Config for Stream #${STREAM_ID}"
echo "=============================================="

# 1. Ki·ªÉm tra file config
STREAM_CONFIG="/etc/nginx/rtmp-apps/stream_${STREAM_ID}.conf"
echo "1. Checking stream config file..."
if [ -f "$STREAM_CONFIG" ]; then
    echo "   ‚úÖ Config file exists: $STREAM_CONFIG"
    echo "   üìÑ Content:"
    echo "   ----------------------------------------"
    cat "$STREAM_CONFIG" | sed 's/^/   /'
    echo "   ----------------------------------------"
    
    # Ki·ªÉm tra c√≥ stream key kh√¥ng
    if grep -q "rtmp://.*/..*" "$STREAM_CONFIG"; then
        echo "   ‚úÖ Stream key found in RTMP URL"
        RTMP_URL=$(grep "push" "$STREAM_CONFIG" | awk '{print $2}' | tr -d ';')
        echo "   üéØ Full RTMP URL: $RTMP_URL"
    else
        echo "   ‚ùå No stream key in RTMP URL"
        echo "   üí° URL should be: rtmp://a.rtmp.youtube.com/live2/YOUR_STREAM_KEY"
    fi
else
    echo "   ‚ùå Config file not found: $STREAM_CONFIG"
    echo "   üí° Agent should create this when stream starts"
fi

# 2. Ki·ªÉm tra nginx c√≥ reload kh√¥ng
echo ""
echo "2. Checking nginx reload..."
if nginx -t 2>/dev/null; then
    echo "   ‚úÖ Nginx config is valid"
    
    # Ki·ªÉm tra nginx c√≥ load config m·ªõi kh√¥ng
    if nginx -T 2>/dev/null | grep -q "stream_${STREAM_ID}"; then
        echo "   ‚úÖ Stream config is loaded by nginx"
    else
        echo "   ‚ùå Stream config not loaded by nginx"
        echo "   üîß Try: nginx -s reload"
    fi
else
    echo "   ‚ùå Nginx config has errors"
    nginx -t
fi

# 3. Ki·ªÉm tra FFmpeg process
echo ""
echo "3. Checking FFmpeg process..."
FFMPEG_COUNT=$(pgrep -f "ffmpeg.*stream_${STREAM_ID}" | wc -l)
if [ "$FFMPEG_COUNT" -gt 0 ]; then
    echo "   ‚úÖ Found $FFMPEG_COUNT FFmpeg process(es)"
    echo "   üìä Process details:"
    ps aux | grep -E "ffmpeg.*stream_${STREAM_ID}" | grep -v grep | while read line; do
        echo "      $line"
    done
    
    # Ki·ªÉm tra FFmpeg c√≥ push ƒë√∫ng endpoint kh√¥ng
    FFMPEG_CMD=$(ps aux | grep -E "ffmpeg.*stream_${STREAM_ID}" | grep -v grep | head -1)
    if echo "$FFMPEG_CMD" | grep -q "rtmp://127.0.0.1:1935/stream_${STREAM_ID}"; then
        echo "   ‚úÖ FFmpeg pushing to correct local endpoint"
    else
        echo "   ‚ùå FFmpeg not pushing to expected endpoint"
    fi
else
    echo "   ‚ùå No FFmpeg process found"
fi

# 4. Test RTMP endpoint
echo ""
echo "4. Testing RTMP endpoint..."
LOCAL_RTMP="rtmp://127.0.0.1:1935/stream_${STREAM_ID}/stream_${STREAM_ID}"
if command -v ffprobe >/dev/null 2>&1; then
    echo "   üîç Testing: $LOCAL_RTMP"
    timeout 3 ffprobe -v quiet "$LOCAL_RTMP" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Local RTMP endpoint is accessible"
    else
        echo "   ‚ùå Local RTMP endpoint not accessible"
    fi
else
    echo "   ‚ö†Ô∏è ffprobe not available"
fi

# 5. Ki·ªÉm tra network connections
echo ""
echo "5. Checking network connections..."
echo "   üì° RTMP connections (port 1935):"
netstat -an | grep ":1935" | sed 's/^/      /'

echo "   üì° Outbound connections to YouTube:"
netstat -an | grep "74.125\|172.217\|216.58" | head -5 | sed 's/^/      /'

# 6. Ki·ªÉm tra logs
echo ""
echo "6. Checking recent logs..."
echo "   üìú Agent logs for stream $STREAM_ID:"
if [ -f "/var/log/ezstream-agent.log" ]; then
    grep "stream.*${STREAM_ID}" /var/log/ezstream-agent.log | tail -3 | sed 's/^/      /'
else
    echo "      ‚ö†Ô∏è Agent log not found"
fi

echo "   üìú Nginx error logs:"
if [ -f "/var/log/nginx/error.log" ]; then
    tail -3 /var/log/nginx/error.log | sed 's/^/      /'
else
    echo "      ‚ö†Ô∏è Nginx error log not found"
fi

# Summary
echo ""
echo "üéØ Summary:"
echo "=========="

ISSUES=0

if [ ! -f "$STREAM_CONFIG" ]; then
    echo "‚ùå Stream config missing"
    ((ISSUES++))
fi

if [ -f "$STREAM_CONFIG" ] && ! grep -q "rtmp://.*/..*" "$STREAM_CONFIG"; then
    echo "‚ùå Stream key missing in config"
    ((ISSUES++))
fi

if [ "$FFMPEG_COUNT" -eq 0 ]; then
    echo "‚ùå No FFmpeg process"
    ((ISSUES++))
fi

if ! nginx -t 2>/dev/null; then
    echo "‚ùå Nginx config invalid"
    ((ISSUES++))
fi

if [ "$ISSUES" -eq 0 ]; then
    echo "‚úÖ All checks passed! Stream should be pushing to YouTube."
    echo ""
    echo "üí° Verify on YouTube:"
    echo "   1. Check YouTube Studio > Go Live"
    echo "   2. Look for 'Stream is live' status"
    echo "   3. Monitor viewer count"
else
    echo "‚ö†Ô∏è Found $ISSUES issue(s). Stream may not be working properly."
    echo ""
    echo "üîß Quick fixes:"
    echo "   1. Restart stream: systemctl restart ezstream-agent"
    echo "   2. Reload nginx: nginx -s reload"
    echo "   3. Check Laravel logs for job errors"
fi
